package co.com.david.aopdemo.aspect;

import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.springframework.stereotype.Component;

@Aspect
@Component
public class MyDemoLoggingAspect {

	@Pointcut("execution(* co.com.david.aopdemo.controller.*.*(..))")
	private void forControllerPackageAnyMethods() {
	}

	@Pointcut("execution(* co.com.david.aopdemo.controller.*.get*(..))")
	private void forControllerPackageGetMethods() {
	}

	@Pointcut("execution(* co.com.david.aopdemo.controller.*.set*(..))")
	private void forControllerPackageSetMethods() {
	}

	// @Before("execution(public void addAccount())") Any class
	// @Before("execution(* add*())") // Any class that match with this conditons
	// @Before("execution(* co.com.david.aopdemo.dao.AccountDAO.add*())") //
	// specific class
	// @Before("execution(* add*(co.com.david.aopdemo.entity.Account))") // specific
	// parameter type
	// @Before("execution(* add*(..))") // zero or more parameters
	// @Before("execution(* add*(co.com.david.aopdemo.entity.Account, boolean))") //
	// specific parameters
	@Before("forControllerPackageAnyMethods()") // specific PACKAGE
	public void beforeAddAccountAdvice() {
		System.out.println(getClass() + " : beforeAddAccountAdvice \\n");
	}
	
	@Before("forControllerPackageGetMethods()") // specific PACKAGE
	public void beforeGetMethods() {
		System.out.println(getClass() + " : beforeGetMethods() \n");
	}

	/*
	 * @Before("forControllerPackageAddStartMethods()") // specific PACKAGE public
	 * void beforeAccountAdviceSecond() { System.out.println(getClass() +
	 * " : beforeAccountAdviceSecond"); }
	 */
}
